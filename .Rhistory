manager <- c(1, 2, 3, 4, 5)
date <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08", "5/1/09")
country <- c("US", "US", "UK", "UK", "UK")
gender <- c("M", "F", "F", "M", "F")
age <- c(32, 45, 25, 39, 99)
q1 <- c(5, 3, 3, 3, 2)
q2 <- c(4, 5, 5, 3, 2)
q3 <- c(5, 2, 5, 4, 1)
q4 <- c(5, 5, 5, NA, 2)
q5 <- c(5, 5, 2, NA, 1)
leadership <- data.frame(manager, date, country, gender, age,
q1, q2, q3, q4, q5, stringsAsFactors=FALSE)
leadership
mydata <- data.frame(x1 = c(2, 2, 6, 4),
x2 = c(3, 4, 2, 8))
mydata <- transform(mydata,
sumx = x1 + x2,
meanx = (x1 + x2)/2)
mydata
leadership$age[leadership$age == 99] <- NA
leadership <- within(leadership,{
agecat <- NA
agecat[age > 75] <- "Elder"
agecat[age >= 55 & age <= 75] <- "Middle Aged"
agecat[age < 55] <- "Young" })
leadership$agecat
?recode
??recode
library(dplyr)
x <- sample(c("a", "b", "c"), 10, replace = TRUE)
level_key <- list(a = "apple", b = "banana", c = "carrot")
recode(x, !!!level_key)
names(leadership)[1] <- "managerID"
names(leadership)[2] <- "testDate"
names(leadership)[6:10] <- c("item1", "item2", "item3", "item4", "item5")
x <- c(1, 2, NA, 3)
x[1] + x[2] + x[3] + x[4]
sum(x)
sum(x, na.rm=TRUE)
newdata <- na.omit(leadership)
newdata
strDates <- c("01/05/1965", "08/16/1975")
dates <- as.Date(strDates, "%m/%d/%Y")
dates
leadership$date <- as.Date(leadership$date, "%m/%d/%y")
myformat <- "%m/%d/%y"
leadership$date <- as.Date(leadership$date, myformat)
leadership$testDate <- as.Date(leadership$testDate, "%m/%d/%y")
leadership$testDate
today <- Sys.Date()
format(today, format="%B %d %Y")
format(today, format="%A")
today <- Sys.Date()
dob <- as.Date("1956-10-12")
difftime(today, dob, units="weeks")
today <- Sys.Date()
dob <- as.Date("1985-08-11")
difftime(today, dob, units="weeks")
today <- Sys.Date()
dob <- as.Date("1985-08-11")
difftime(today, dob, units="years")
today <- Sys.Date()
dob <- as.Date("1985-08-11")
difftime(today, dob, units="days")
attach(leadership)
newdata <-leadership[order(gender, -age),]
detach(leadership)
newdata
newdata <- leadership[order(leadership$age),]
newdata
newdata <- leadership[, c(6:10)]
newdata
myvars <- paste("item", 1:5, sep="")
newdata <- leadership[myvars]
newdata
myvars <- names(leadership) %in% c("item3", "item4")
newdata <- leadership[!myvars]
newdat
newdata
newdata <- leadership[c(-8,-9)]
newdata
newdata <- leadership[1:3,]
newdata
newdata <- leadership[leadership$gender=="M" & leadership$age > 30,]
newdata
leadership$date <- as.Date(leadership$testDate, "%m/%d/%y")
startdate <- as.Date("2009-01-01")
enddate <- as.Date("2009-10-31")
newdata <- leadership[which(leadership$date >= startdate &
leadership$date <= enddate),]
newdata
newdata <- leadership[which(leadership$testDate >= startdate &
leadership$testDate <= enddate),]
newdata
leadership$testDate <- as.Date(leadership$testDate, "%m/%d/%y")
startdate <- as.Date("2009-01-01")
enddate <- as.Date("2009-10-31")
newdata <- leadership[which(leadership$testDate >= startdate &
leadership$testDate <= enddate),]
newdata
leadership
leadership <- leadership[, -12]
leadership
leadership$testDate <- as.Date(leadership$testDate, "%m/%d/%y")
startdate <- as.Date("2009-01-01")
enddate <- as.Date("2009-10-31")
newdata <- leadership[which(leadership$testDate >= startdate &
leadership$testDate <= enddate),]
newdata
newdata <- subset(leadership, age >= 35 | age < 24,
select=c(item1, item2, item3, item4))
newdata
newdata <- subset(leadership, gender=="M" & age > 25,
select=gender:item4)
newdata
mysample <- leadership[sample(1:nrow(leadership), 3, replace=FALSE),]
mysample
install.packages("sqldf")
library(sqldf)
install.packages(c("checkmate", "clipr", "colorspace", "curl", "data.table", "Hmisc", "openssl", "purrr", "tibble"))
mtcars
library(sqldf)
newdf <- sqldf("select * from mtcars where carb=1 order by mpg",
row.names=TRUE)
newdf
sqldf("select avg(mpg) as avg_mpg, avg(disp) as avg_disp, gear
from mtcars where cyl in (4, 6) group by gear")
x <- pretty(c(-3,3), 30)
y <- dnorm(x)
plot(x, y,
type = "l",
xlab = "Normal Deviate",
ylab = "Density",
yaxs = "i"
)
set.seed(42)
runif(5)
name <- c("Jane")
cat("Hello" , name, "\n")
options(digits=2)
Student <- c("John Davis", "Angela Williams", "Bullwinkle Moose",
"David Jones", "Janice Markhammer", "Cheryl Cushing",
"Reuven Ytzrhak", "Greg Knox", "Joel England",
"Mary Rayburn")
Math <- c(502, 600, 412, 358, 495, 512, 410, 625, 573, 522)
Science <- c(95, 99, 80, 82, 75, 85, 80, 95, 89, 86)
English <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18)
roster <- data.frame(Student, Math, Science, English,
stringsAsFactors=FALSE)
roster
z <- scale(roster[,2:4])
z
score <- apply(z, 1, mean)
roster <- cbind(roster, score)
roster
y <- quantile(score, c(.8,.6,.4,.2))
roster$grade[score >= y[1]] <- "A"
roster$grade[score < y[1] & score >= y[2]] <- "B"
roster$grade[score < y[2] & score >= y[3]] <- "C"
roster$grade[score < y[3] & score >= y[4]] <- "D"
roster$grade[score < y[4]] <- "F"
roster
name <- strsplit((roster$Student), " ")
Lastname <- sapply(name, "[", 2)
Firstname <- sapply(name, "[", 1)
roster <- cbind(Firstname,Lastname, roster[,-1])
roster
roster <- roster[order(Lastname,Firstname),]
roster
for (i in 1:10) print("Hello")
i <- 10
while (i > 0) {print("Hello"); i <- i - 1}
ifelse (score > 0.5, "Passed", "Failed")
feelings <- c("sad", "afraid")
for (i in feelings)
print(
switch(i,
happy = "I am glad you are happy",
afraid = "There is nothing to fear",
sad = "Cheer up",
angry = "Calm down now"
)
)
mystats <- function(x, parametric=TRUE, print=FALSE) {
if (parametric) {
center <- mean(x); spread <- sd(x)
} else {
center <- median(x); spread <- mad(x)
}
if (print & parametric) {
cat("Mean=", center, "\n", "SD=", spread, "\n")
} else if (print & !parametric) {
cat("Median=", center, "\n", "MAD=", spread, "\n")
}
result <- list(center=center, spread=spread)
return(result)
}
set.seed(1234)
x <- rnorm(500)
y <- mystats(x)
y
y <- mystats(x, parametric = F, print = T)
mystats <- function(x, parametric=TRUE, print=FALSE) {
if (parametric) {
center <- mean(x); spread <- sd(x)
} else {
center <- median(x); spread <- mad(x)
}
if (print & parametric) {
cat("Mean =", center, "\n", "SD =", spread, "\n")
} else if (print & !parametric) {
cat("Median =", center, "\n", "MAD =", spread, "\n")
}
result <- list(center=center, spread=spread)
return(result)
}
set.seed(1234)
x <- rnorm(500)
y <- mystats(x, parametric = F, print = T)
mystats <- function(x, parametric=TRUE, print=FALSE) {
if (parametric) {
center <- mean(x); spread <- sd(x)
} else {
center <- median(x); spread <- mad(x)
}
if (print & parametric) {
cat("Mean =", center, "\r", "SD =", spread, "\r")
} else if (print & !parametric) {
cat("Median =", center, "\r", "MAD =", spread, "\r")
}
result <- list(center=center, spread=spread)
return(result)
}
set.seed(1234)
x <- rnorm(500)
y <- mystats(x, parametric = F, print = T)
mystats <- function(x, parametric=TRUE, print=FALSE) {
if (parametric) {
center <- mean(x); spread <- sd(x)
} else {
center <- median(x); spread <- mad(x)
}
if (print & parametric) {
cat("Mean =", center, "\r\n", "SD =", spread, "\r\n")
} else if (print & !parametric) {
cat("Median =", center, "\r\n", "MAD =", spread, "\r\n")
}
result <- list(center=center, spread=spread)
return(result)
}
set.seed(1234)
x <- rnorm(500)
y <- mystats(x, parametric = F, print = T)
x <- "foo\nbar\rbaz\r\nquux"
x
mystats <- function(x, parametric=TRUE, print=FALSE) {
if (parametric) {
center <- mean(x); spread <- sd(x)
} else {
center <- median(x); spread <- mad(x)
}
if (print & parametric) {
cat("Mean =", center, "\\n", "SD =", spread, "\\n")
} else if (print & !parametric) {
cat("Median =", center, "\\n", "MAD =", spread, "\\n")
}
result <- list(center=center, spread=spread)
return(result)
}
set.seed(1234)
x <- rnorm(500)
y <- mystats(x, parametric = F, print = T)
cat("hello\nworld\n")
mystats <- function(x, parametric=TRUE, print=FALSE) {
if (parametric) {
center <- mean(x); spread <- sd(x)
} else {
center <- median(x); spread <- mad(x)
}
if (print & parametric) {
cat("Mean =", center, "\n\b", "SD =", spread, "\n\b")
} else if (print & !parametric) {
cat("Median =", center, "\n\b", "MAD =", spread, "\n\b")
}
result <- list(center=center, spread=spread)
return(result)
}
set.seed(1234)
x <- rnorm(500)
y <- mystats(x, parametric = F, print = T)
mystats <- function(x, parametric=TRUE, print=FALSE) {
if (parametric) {
center <- mean(x); spread <- sd(x)
} else {
center <- median(x); spread <- mad(x)
}
if (print & parametric) {
cat("Mean =", center, "\n", "\bSD =", spread, "\n")
} else if (print & !parametric) {
cat("Median =", center, "\n", "\bMAD =", spread, "\n")
}
result <- list(center=center, spread=spread)
return(result)
}
set.seed(1234)
x <- rnorm(500)
y <- mystats(x, parametric = F, print = T)
mydate <- function(type="long") {
switch(type,
long = format(Sys.time(), "%A %B %d %Y"),
short = format(Sys.time(), "%m-%d-%y"),
cat(type, "is not a recognized type\n")
)
}
mydate("long")
mydate("short")
mydate()
mydate("medium")
mtcars
cars <- mtcars[1:5,1:4]
cars
options(digits=3)
attach(mtcars)
aggdata <-aggregate(mtcars, by=list(cyl,gear), FUN=mean, na.rm=TRUE)
aggdata
options(digits=3)
attach(mtcars)
aggdata <-aggregate(mtcars, by=list(Group.cyl=cyl, Group.gear=gear),
FUN=mean, na.rm=TRUE)
aggdata
detach(mtcars)
install.packages("reshape2")
ID <- c(1, 1, 2, 2)
Time <- c(1, 2, 1, 2)
X1 <- c(5, 3, 6, 2)
X2 <- c(6, 5, 1, 4)
mydata <- data.frame(ID, Time, X1, X2)
mydata
library(reshape2)
md <- melt(mydata, id=c("ID", "Time"))
md
dcast(md, ID, mean)
dcast(md, ID~X1+X2, mean)
dcast(md, ID~Variable, mean)
dcast(md, ID~variable, mean)
dcast(md, ID+Time~variable)
dcast(md, ID~variable, mean)
dcast(md, Time~variable, mean)
dcast(md, ID~Time, mean)
dcast(md, ID+Time~variable)
dcast(md, ID+variable~Time)
dcast(md, ID~variable+Time)
